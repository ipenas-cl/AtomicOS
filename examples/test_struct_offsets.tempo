// Test struct field offset calculation

struct Point {
    x: int32,
    y: int32
}

struct Rectangle @packed {
    top_left: Point,
    width: int32,
    height: int32
}

struct MixedTypes {
    byte_field: int8,      // offset 0
    word_field: int16,     // offset 2 (aligned)
    dword_field: int32,    // offset 4
    another_byte: int8     // offset 8
}

function test_point() -> int32 {
    let p: Point;
    p.x = 100;
    p.y = 200;
    return p.x + p.y;
}

function test_rectangle() -> int32 {
    let rect: Rectangle;
    rect.top_left.x = 10;
    rect.top_left.y = 20;
    rect.width = 640;
    rect.height = 480;
    return rect.width;
}

function test_mixed() -> int32 {
    let m: MixedTypes;
    m.byte_field = 0x12;
    m.word_field = 0x3456;
    m.dword_field = 0x789ABCDE;
    m.another_byte = 0xFF;
    return m.dword_field;
}

function main() -> int32 {
    let result1 = test_point();
    let result2 = test_rectangle();
    let result3 = test_mixed();
    return result1 + result2 + result3;
}