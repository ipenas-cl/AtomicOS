// Test file for Tempo v4 parser with control flow

function test_if_else(x: int32): int32 {
    if (x > 10) {
        return x * 2;
    } else {
        return x + 5;
    }
}

function test_while(n: int32): int32 {
    let sum: int32 = 0;
    let i: int32 = 0;
    
    while (i < n) [100] {  // Max 100 iterations
        sum = sum + i;
        i = i + 1;
    }
    
    return sum;
}

function test_for(): int32 {
    let total: int32 = 0;
    
    for (let i: int32 = 0; i < 10; i = i + 1) [10] {
        total = total + i * i;
    }
    
    return total;
}

function test_operators(a: int32, b: int32): bool {
    // Test various operators
    let c: int32 = a + b;
    c += 5;
    c -= 2;
    c *= 3;
    c /= 2;
    
    // Bitwise operations
    let d: int32 = a & b;
    d = d | 0xFF;
    d = d ^ 0x55;
    d = ~d;
    d = d << 2;
    d = d >> 1;
    
    // Comparison and logical
    let result: bool = (a > b) && (c != 0);
    result = result || (d < 100);
    
    return result;
}

// Main function with security annotation
@security(2)
@wcet(1000)
function main(): int32 {
    let x: int32 = test_if_else(15);
    let y: int32 = test_while(5);
    let z: int32 = test_for();
    let ok: bool = test_operators(10, 20);
    
    if (ok) {
        return 0;
    } else {
        return 1;
    }
}